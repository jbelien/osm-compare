{% extends "layout.njk" %}

{% block stylesheets %}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/openlayers/4.2.0/ol.css" integrity="sha256-rQq4Fxpq3LlPQ8yP11i6Z2lAo82b6ACDgd35CKyNEBw=" crossorigin="anonymous">
{% endblock %}

{% block content %}
<div class="container">
  <form action="/upload" method="post" enctype="multipart/form-data">
  <div class="float-right" >
    <div class="btn-group" role="group">
      {% if not file and not errors %}
      <button type="button" class="btn btn-outline-secondary" disabled="disabled"><i class="fa fa-hand-o-left" aria-hidden="true"></i> Back</button>
      <button type="submit" class="btn btn-primary">Next <i class="fa fa-hand-o-right" aria-hidden="true"></i></button>
      {% elseif errors %}
      <a href="/upload" class="btn btn-secondary"><i class="fa fa-hand-o-left" aria-hidden="true"></i> Back</a>
      <a href="#" class="btn btn-outline-secondary disabled">Next <i class="fa fa-hand-o-right" aria-hidden="true"></i></a>
      {% elseif file %}
      <a href="/upload" class="btn btn-secondary"><i class="fa fa-hand-o-left" aria-hidden="true"></i> Back</a>
      <a href="/overpass" class="btn btn-primary">Next <i class="fa fa-hand-o-right" aria-hidden="true"></i></a>
      {% endif %}
    </div>
  </div>
  <h2>1 - Upload data</h2>
  <hr>

  {% if errors %}
  <div class="alert alert-danger" role="alert">
    <strong>Your GeoJSON file "{{ file }}" is not valid.</strong>
    <p>Here is why :</p>
    <pre>{{ errors | dump | safe }}</pre>
  </div>
  {% else %}
    {% if file %}
      <p>
        <strong>File :</strong> {{ file }}
      </p>
      <div id="map" style="width: 100%; height: 500px;"></div>
    {% else %}
      <div class="form-group">
        <label for="input-file">File input from your disk</label>
        <input type="file" name="file" class="form-control-file" id="input-file" aria-describedby="input-file-help" accept=".json,.geojson,application/json">
        <small id="input-file-help" class="form-text text-muted">Must be a valid GeoJSON file. Full details on <a href="http://geojson.org/" target="_blank">http://geojson.org/</a>.</small>
      </div>
      <div class="text-center">- OR -</div>
      <div class="form-group">
        <label for="input-url">File input from URL</label>
        <input type="url" name="url" class="form-control" id="input-url" aria-describedby="input-url-help">
        <small id="input-url-help" class="form-text text-muted">Must be URL pointing to a valid GeoJSON file. Full details on <a href="http://geojson.org/" target="_blank">http://geojson.org/</a>.</small>
      </div>
    {% endif %}
  {% endif %}
  </form>
</div>
{% endblock %}

{% block scripts %}
{% if file %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/openlayers/4.2.0/ol.js" integrity="sha256-AS3nJgIE4+tPLihbjC2HgphwH1ofrA+7JaP4WmPL+9Q=" crossorigin="anonymous"></script>
<script>
  (function(){
    var areaLayer = new ol.layer.Vector({
      source: new ol.source.Vector(),
      style: function(feature) {
        return new ol.style.Style({
          stroke: new ol.style.Stroke({
            color: "blue",
            lineDash: [10],
            width: 3
          }),
          fill: false
        });
      }
    });
    var dataLayer = new ol.layer.Vector({
      source: new ol.source.Vector()
    });

    var map = new ol.Map({
      controls: ol.control.defaults({attribution: false}).extend([ new ol.control.Attribution({collapsible: false}) ]),
      layers: [
        new ol.layer.Tile({
          source: new ol.source.OSM({
            url: "https://tile.openstreetmap.be/osmbe/{z}/{x}/{y}.png",
            attributions: [ ol.source.OSM.ATTRIBUTION, "Tiles courtesy of <a href=\"https://geo6.be/\">GEO-6</a>" ]
          })
        }),
        areaLayer,
        dataLayer
      ],
      target: "map",
      view: new ol.View({
        center: ol.proj.fromLonLat([37.41, 8.82]),
        zoom: 4
      })
    });

    areaLayer.getSource().addFeature((new ol.format.GeoJSON()).readFeature({{ area | dump | safe }}, { featureProjection: map.getView().getProjection() }));

    //dataLayer.getSource().addFeature((new ol.format.GeoJSON()).readFeatures({{ geojson | dump | safe }}, { featureProjection: map.getView().getProjection() }));
    var json = {{ geojson | dump | safe }};
    json.features.forEach(function(feature) {
      dataLayer.getSource().addFeature((new ol.format.GeoJSON()).readFeature(feature, { featureProjection: map.getView().getProjection() }));
    });

    map.getView().fit(areaLayer.getSource().getExtent());
  })();
</script>
{% endif %}
{% endblock %}
